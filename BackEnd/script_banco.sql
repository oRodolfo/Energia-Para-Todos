-- =======================================================================
-- SCRIPT COMPLETO DO BANCO DE DADOS "energia_db"
-- Projeto: Energia para Todos
-- =======================================================================

-- ✅ HABILITAR EXTENSÃO PARA CRIPTOGRAFIA
CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- =======================================================================
-- TABELAS DE APOIO
-- =======================================================================

CREATE TABLE IF NOT EXISTS TIPO_USUARIO (
    ID_TIPO SERIAL PRIMARY KEY,
    DESCRICAO_TIPO VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS STATUS (
    ID_STATUS SERIAL PRIMARY KEY,
    DESCRICAO_STATUS VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS CLASSIFICACAO_DOADOR (
    ID_CLASSIFICACAO SERIAL PRIMARY KEY,
    DESCRICAO_CLASSIFICACAO VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS STATUS_BENEFICIARIO (
    ID_STATUS_BENEFICIARIO SERIAL PRIMARY KEY,
    DESCRICAO_STATUS_BENEFICIARIO VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS STATUS_CREDITO (
    ID_STATUS_CREDITO SERIAL PRIMARY KEY,
    DESCRICAO_STATUS VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS TIPO_MOVIMENTO (
    ID_TIPO_MOVIMENTACAO SERIAL PRIMARY KEY,
    DESCRICAO_TIPO VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS STATUS_TRANSACAO (
    ID_STATUS_TRANSACAO SERIAL PRIMARY KEY,
    DESCRICAO_STATUS VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS TIPO_ACAO (
    ID_TIPO_ACAO SERIAL PRIMARY KEY,
    DESCRICAO_TIPO_ACAO VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS TIPO_DISPOSITIVO (
    ID_TIPO_DISPOSITIVO SERIAL PRIMARY KEY,
    DESCRICAO_TIPO_DISPOSITIVO VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS STATUS_LOG (
    ID_STATUS_LOG SERIAL PRIMARY KEY,
    DESCRICAO_STATUS_LOG VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS STATUS_FILA (
    ID_STATUS_FILA SERIAL PRIMARY KEY,
    DESCRICAO_STATUS_FILA VARCHAR(50) NOT NULL UNIQUE
);

-- ✅ TABELA TELEFONE
CREATE TABLE IF NOT EXISTS TELEFONE (
    ID_TELEFONE SERIAL PRIMARY KEY,
    NUMERO VARCHAR(20) NOT NULL
);

-- ✅ TABELA CREDENCIAL_USUARIO
CREATE TABLE IF NOT EXISTS CREDENCIAL_USUARIO (
    ID_CREDENCIAL SERIAL PRIMARY KEY,
    LOGIN VARCHAR(120) UNIQUE NOT NULL,
    SENHA_HASH TEXT NOT NULL,
    SENHA_SALT TEXT NOT NULL,
    DATA_ULTIMO_LOGIN TIMESTAMP
);

-- =======================================================================
-- TABELAS PRINCIPAIS
-- =======================================================================

CREATE TABLE IF NOT EXISTS USUARIO (
    ID_USUARIO SERIAL PRIMARY KEY,
    NOME VARCHAR(120) NOT NULL,
    EMAIL VARCHAR(120) UNIQUE NOT NULL,
    CEP VARCHAR(20),
    ID_TELEFONE INTEGER REFERENCES TELEFONE(ID_TELEFONE),
    ID_TIPO INTEGER REFERENCES TIPO_USUARIO(ID_TIPO),
    ID_STATUS INTEGER REFERENCES STATUS(ID_STATUS),
    ID_CREDENCIAL INTEGER REFERENCES CREDENCIAL_USUARIO(ID_CREDENCIAL)
);

CREATE TABLE IF NOT EXISTS DOADOR (
    ID_DOADOR SERIAL PRIMARY KEY,
    DATA_CADASTRO DATE DEFAULT CURRENT_DATE,
    ID_USUARIO INTEGER REFERENCES USUARIO(ID_USUARIO),
    ID_CLASSIFICACAO INTEGER REFERENCES CLASSIFICACAO_DOADOR(ID_CLASSIFICACAO)
);

CREATE TABLE IF NOT EXISTS RENDA_BENEFICIARIO (
    ID_RENDA SERIAL PRIMARY KEY,
    VALOR_RENDA DECIMAL(10,2),
    PERIODO VARCHAR(20) DEFAULT 'MENSAL'
);

CREATE TABLE IF NOT EXISTS CONSUMO_BENEFICIARIO (
    ID_CONSUMO SERIAL PRIMARY KEY,
    MEDIA_KWH DECIMAL(10,2),
    PERIODO VARCHAR(20) DEFAULT 'MENSAL'
);

CREATE TABLE IF NOT EXISTS BENEFICIARIO (
    ID_BENEFICIARIO SERIAL PRIMARY KEY,
    NUM_MORADORES INTEGER,
    ID_USUARIO INTEGER REFERENCES USUARIO(ID_USUARIO),
    ID_RENDA INTEGER REFERENCES RENDA_BENEFICIARIO(ID_RENDA),
    ID_CONSUMO INTEGER REFERENCES CONSUMO_BENEFICIARIO(ID_CONSUMO),
    ID_STATUS_BENEFICIARIO INTEGER REFERENCES STATUS_BENEFICIARIO(ID_STATUS_BENEFICIARIO)
);

CREATE TABLE IF NOT EXISTS CREDITO (
    ID_CREDITO SERIAL PRIMARY KEY,
    QUANTIDADE_DISPONIVEL_KWH DECIMAL(10,2) NOT NULL,
    DATA_EXPIRACAO DATE,
    ID_DOADOR INTEGER REFERENCES DOADOR(ID_DOADOR),
    ID_STATUS_CREDITO INTEGER REFERENCES STATUS_CREDITO(ID_STATUS_CREDITO)
);

CREATE TABLE IF NOT EXISTS TRANSACAO (
    ID_TRANSACAO SERIAL PRIMARY KEY,
    QUANTIDADE_KWH DECIMAL(10,2),
    DATA_TRANSACAO DATE DEFAULT CURRENT_DATE,
    ID_BENEFICIARIO INTEGER REFERENCES BENEFICIARIO(ID_BENEFICIARIO),
    ID_STATUS_TRANSACAO INTEGER REFERENCES STATUS_TRANSACAO(ID_STATUS_TRANSACAO),
    ID_TIPO_MOVIMENTACAO INTEGER REFERENCES TIPO_MOVIMENTO(ID_TIPO_MOVIMENTACAO)
);

CREATE TABLE IF NOT EXISTS HISTORICO_CREDITO (
    ID_HISTORICO SERIAL PRIMARY KEY,
    QUANTIDADE_KWH DECIMAL(10,2),
    DATA_MOVIMENTO DATE DEFAULT CURRENT_DATE,
    ID_CREDITO INTEGER REFERENCES CREDITO(ID_CREDITO)
);

CREATE TABLE IF NOT EXISTS LOG_AUDITORIA (
    ID_LOG SERIAL PRIMARY KEY,
    IP_ACESSO VARCHAR(50),
    DATA_HORA TIMESTAMP DEFAULT NOW(),
    DETALHES TEXT,
    ID_USUARIO INTEGER REFERENCES USUARIO(ID_USUARIO),
    ID_TIPO_ACAO INTEGER REFERENCES TIPO_ACAO(ID_TIPO_ACAO),
    ID_TIPO_DISPOSITIVO INTEGER REFERENCES TIPO_DISPOSITIVO(ID_TIPO_DISPOSITIVO),
    ID_STATUS_LOG INTEGER REFERENCES STATUS_LOG(ID_STATUS_LOG)
);

-- =======================================================================
-- INSERTS INICIAIS
-- =======================================================================

INSERT INTO TIPO_USUARIO (DESCRICAO_TIPO) VALUES 
('DOADOR'), ('BENEFICIARIO'), ('ADMINISTRADOR')
ON CONFLICT (DESCRICAO_TIPO) DO NOTHING;

INSERT INTO STATUS (DESCRICAO_STATUS) VALUES 
('ATIVO'), ('INATIVO'), ('PENDENTE'), ('BLOQUEADO')
ON CONFLICT (DESCRICAO_STATUS) DO NOTHING;

INSERT INTO CLASSIFICACAO_DOADOR (DESCRICAO_CLASSIFICACAO) VALUES 
('PESSOA_FISICA'), ('PESSOA_JURIDICA')
ON CONFLICT (DESCRICAO_CLASSIFICACAO) DO NOTHING;

INSERT INTO STATUS_BENEFICIARIO (DESCRICAO_STATUS_BENEFICIARIO) VALUES 
('AGUARDANDO_APROVACAO'), ('APROVADO'), ('EM_ATENDIMENTO'), ('SUSPENSO'), ('INATIVO')
ON CONFLICT (DESCRICAO_STATUS_BENEFICIARIO) DO NOTHING;

INSERT INTO STATUS_CREDITO (DESCRICAO_STATUS) VALUES 
('DISPONIVEL'), ('PARCIALMENTE_UTILIZADO'), ('ESGOTADO'), ('EXPIRADO'), ('BLOQUEADO')
ON CONFLICT (DESCRICAO_STATUS) DO NOTHING;

INSERT INTO TIPO_MOVIMENTO (DESCRICAO_TIPO) VALUES 
('DISTRIBUICAO'), ('ESTORNO'), ('AJUSTE'), ('EXPIRACAO')
ON CONFLICT (DESCRICAO_TIPO) DO NOTHING;

INSERT INTO STATUS_TRANSACAO (DESCRICAO_STATUS) VALUES 
('CONCLUIDA'), ('PENDENTE'), ('CANCELADA'), ('ERRO')
ON CONFLICT (DESCRICAO_STATUS) DO NOTHING;

INSERT INTO TIPO_ACAO (DESCRICAO_TIPO_ACAO) VALUES 
('LOGIN'), ('LOGOUT'), ('CADASTRO'), ('DOACAO'), ('DISTRIBUICAO')
ON CONFLICT (DESCRICAO_TIPO_ACAO) DO NOTHING;

INSERT INTO TIPO_DISPOSITIVO (DESCRICAO_TIPO_DISPOSITIVO) VALUES 
('WEB'), ('MOBILE')
ON CONFLICT (DESCRICAO_TIPO_DISPOSITIVO) DO NOTHING;

INSERT INTO STATUS_LOG (DESCRICAO_STATUS_LOG) VALUES 
('SUCESSO'), ('FALHA'), ('PENDENTE'), ('ALERTA')
ON CONFLICT (DESCRICAO_STATUS_LOG) DO NOTHING;

INSERT INTO STATUS_FILA (DESCRICAO_STATUS_FILA) VALUES 
('AGUARDANDO'), ('EM_DISTRIBUICAO'), ('ATENDIDO'), ('REMOVIDO')
ON CONFLICT (DESCRICAO_STATUS_FILA) DO NOTHING;

-- =======================================================================
-- ✅ FIM DO SCRIPT
-- =======================================================================

SELECT * FROM usuario ORDER BY id_usuario DESC LIMIT 5;